///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.20.1.2476 for 8051               09/Apr/2017  15:54:00
// Copyright 2004-2015 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  near
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        H:\TI ble环境搭建\工程\13 μCOS-iii移植2\TI CC2540\BSP\bsp.c
//    Command line       =  
//        "H:\TI ble环境搭建\工程\13 μCOS-iii移植2\TI CC2540\BSP\bsp.c" -lB
//        "H:\TI ble环境搭建\工程\13 μCOS-iii移植2\TI CC2540\APP\IAR
//        Project\Debug\List\" -o "H:\TI ble环境搭建\工程\13 μCOS-iii移植2\TI
//        CC2540\APP\IAR Project\Debug\Obj\" -e --no_cse --no_unroll
//        --no_inline --no_code_motion --no_tbaa --debug --core=plain
//        --dptr=16,1 --data_model=large --code_model=near
//        --calling_convention=xdata_reentrant --place_constants=data
//        --nr_virtual_regs 8 -I "H:\TI ble环境搭建\工程\13
//        μCOS-iii移植2\uCOS-III\Source\" -I "H:\TI ble环境搭建\工程\13
//        μCOS-iii移植2\uCOS-III\Ports\51-CC2540\Generic\IAR\" -I "H:\TI
//        ble环境搭建\工程\13 μCOS-iii移植2\uC-CPU\" -I "H:\TI
//        ble环境搭建\工程\13 μCOS-iii移植2\uC-CPU\51-CC2540\IAR\" -I "H:\TI
//        ble环境搭建\工程\13 μCOS-iii移植2\TI CC2540\BSP\" -I "H:\TI
//        ble环境搭建\工程\13 μCOS-iii移植2\TI CC2540\APP\" -I "H:\TI
//        ble环境搭建\工程\13 μCOS-iii移植2\uC-LIB\" -Ol
//    List file          =  
//        H:\TI ble环境搭建\工程\13 μCOS-iii移植2\TI CC2540\APP\IAR
//        Project\Debug\List\bsp.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME bsp

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?FUNC_ENTER_XDATA
        EXTERN ?FUNC_LEAVE_XDATA
        EXTERN __INIT_DATA_Z

        PUBLIC BSPInit
        PUBWEAK CLKCONCMD
        PUBWEAK CLKCONSTA
        PUBLIC SysClkSet_32M
        PUBLIC sysstktop

        EXTERN BSPUARTInitDMA
        EXTERN BSPUart0TxIsr
        EXTERN BSP_LED_Init
        EXTERN IRQ_register
        EXTERN OSCfg_TickRate_Cnt
        EXTERN OS_CPU_SysTickHandler
        EXTERN OS_CPU_SysTickInit

// H:\TI ble环境搭建\工程\13 μCOS-iii移植2\TI CC2540\BSP\bsp.c
//    1 #define BSP_EXT_MODULE
//    2 #include <bsp_inner.h>

        ASEGN SFR_AN:DATA:NOROOT,09eH
// unsigned char volatile __sfr CLKCONSTA
CLKCONSTA:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c6H
// unsigned char volatile __sfr CLKCONCMD
CLKCONCMD:
        DATA8
        DS 1
//    3 #include <bsp.h>
//    4 

        RSEG DATA_Z:DATA:NOROOT(0)
        DATA16
//    5 __data void * sysstktop;
sysstktop:
        DS 2
        REQUIRE __INIT_DATA_Z
//    6 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//    7 void SysClkSet_32M(void)
SysClkSet_32M:
        CODE
//    8 {
        ; Saved register size: 0
        ; Auto size: 0
//    9   CLKCONCMD &= ~0x40;
        ANL     0xc6,#0xbf
//   10   while(CLKCONSTA & 0x40);    
??SysClkSet_32M_0:
        MOV     A,0x9e
        MOV     C,0xE0 /* A   */.6
        JC      ??SysClkSet_32M_0
//   11   CLKCONCMD &= ~0x47;  
        ANL     0xc6,#0xb8
//   12 }
        RET
        REQUIRE CLKCONCMD
        REQUIRE CLKCONSTA
//   13 

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   14 void BSPInit(void)
BSPInit:
        CODE
//   15 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0x9
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
//   16     SysClkSet_32M();
        ; Setup parameters for call to function SysClkSet_32M
        LCALL   SysClkSet_32M
//   17     BSP_LED_Init(); 
        ; Setup parameters for call to function BSP_LED_Init
        LCALL   BSP_LED_Init
//   18     BSPUARTInitDMA();
        ; Setup parameters for call to function BSPUARTInitDMA
        LCALL   BSPUARTInitDMA
//   19     
//   20     // 注册中断处理函数
//   21     IRQ_register(SLP_TIMER_INT_NUM, OS_CPU_SysTickHandler);
        ; Setup parameters for call to function IRQ_register
        MOV     R2,#OS_CPU_SysTickHandler & 0xff
        MOV     R3,#(OS_CPU_SysTickHandler >> 8) & 0xff
        MOV     R1,#0x5
        LCALL   IRQ_register
        MOV     A,R1
//   22     IRQ_register(UART0_TX_INT_NUM, BSPUart0TxIsr);
        ; Setup parameters for call to function IRQ_register
        MOV     R2,#BSPUart0TxIsr & 0xff
        MOV     R3,#(BSPUart0TxIsr >> 8) & 0xff
        MOV     R1,#0x7
        LCALL   IRQ_register
        MOV     A,R1
//   23     
//   24     OS_CPU_SysTickInit(OSCfg_TickRate_Cnt);
        ; Setup parameters for call to function OS_CPU_SysTickInit
        MOV     DPTR,#OSCfg_TickRate_Cnt
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     R2,?V0
        MOV     R3,?V1
        CLR     A
        MOV     R4,A
        MOV     R5,A
        LCALL   OS_CPU_SysTickInit
//   25 }
        MOV     R7,#0x2
        LJMP    ?FUNC_LEAVE_XDATA

        END
//   26 
//   27 
//   28 
//   29 
//   30 
//   31 
//   32 
//   33 
//   34 
// 
//  2 bytes in segment DATA_Z
// 72 bytes in segment NEAR_CODE
//  2 bytes in segment SFR_AN
// 
// 72 bytes of CODE memory
//  2 bytes of DATA memory (+ 2 bytes shared)
//
//Errors: none
//Warnings: none
